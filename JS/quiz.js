const questions = [
    {
        question: "–°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç 5√ó5?",
        answers: ["8", "9", "25", "15"],
        correct: 3
    },
    {
        question: "–ö–∞–∫–æ–π –≥–æ—Ä–æ–¥ —è–≤–ª—è–µ—Ç—Å—è —Å—Ç–æ–ª–∏—Ü–µ–π –†–æ—Å—Å–∏–∏?",
        answers: ["–ü–µ—Ç—Ä–æ–∑–∞–≤–æ–¥—Å–∫ üí™", "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "–ú–æ—Å–∫–≤–∞", "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫"],
        correct: 3
    },
    {
        question: "–°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç 5√ó5?",
        answers: ["8", "9", "25", "15"],
        correct: 3
    },
    {
        question: "–ß–µ–º—É —Ä–∞–≤–µ–Ω –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å –∏–∑ 25",
        answers: ["5", "-5", "8", "16"],
        correct: 1
    },
];
// –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç—ã
const headerContainer = document.querySelector('#header')
const listContainer = document.querySelector('#list')
const submitButton = document.querySelector('#submit')

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–≥—Ä—ã
let score = 0; // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç–æ–≤
let questionIndex = 0; // —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å


clearPage();
showQuestion();
submitButton.onclick = checkAnswer;
function clearPage(){
    headerContainer.innerHTML = '';
    listContainer.innerHTML = '';
}

shuffle();
function showQuestion(){
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤–æ–ø—Ä–æ—Å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    const headerTemplate = `<h2 class="QuizHeaderText">%title%</h2>`
    const title = headerTemplate.replace('%title%', questions[questionIndex]['question']);
    headerContainer.innerHTML = title;


    // –ü—Ä–æ—Ö–æ–¥ –ø–æ –≤—Å–µ–º –≤–∞—Ä–∏–∞–Ω—Ç–∞–º –æ—Ç–≤–µ—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Ç–≤–µ—Ç—ã
    let answerNumber = 1;
    for (let answerText of questions[questionIndex]['answers']) {
        const questionTemplate =
            `<li>
                <label>
                    <input value="%number%" type="radio" class="answer" name="answer">
                    <span>%answer%</span>
                </label>
            </li>`

        const answerHTML = questionTemplate
            .replace('%answer%', answerText)
            .replace('%number%', answerNumber)

        listContainer.innerHTML += answerHTML;
        answerNumber++;
    }
}

function checkAnswer() {
    // –ü–æ–∏—Å–∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
    const checkedAnswer = listContainer.querySelector('input:checked')

    // –ï—Å–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω –æ—Ç–≤–µ—Ç
    if (!checkedAnswer) {
        submitButton.blur();
        return;
    }

    // –ù–æ–º–µ—Ä –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userAnswer = parseInt(checkedAnswer.value);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–≤–µ—Ç–∞
    if (userAnswer === questions[questionIndex]['correct']) {
        score++;
    }

    if (questionIndex !== questions.length - 1) {
        questionIndex++;
        clearPage();
        showQuestion();
        return;
    } else {
        clearPage();
        showResults()
    }
}

function showResults(){
   const resultsTemplate = `<h2 class="QuizHeaderText">%result%</h2>`

    // let title, message;
    // if (score === questions.length) {
    //     title = '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º';
    //     message = '–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –≤–µ—Ä–Ω–æ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã';
    // } else if((score * 100 / questions.length >= 50)) {
    //     title = '–ù–µ–ø–ª–æ—Ö–æ';
    //     message = '–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –ø–æ–ª–æ–≤–∏–Ω—É –≤–æ–ø—Ä–æ—Å–æ–≤ –≤–µ—Ä–Ω–æ';
    // } else {
    //     title = '–°—Ç–æ–∏—Ç –ø–æ—Å—Ç–∞—Ä–∞—Ç—å—Å—è';
    //     message = '–ú–µ–Ω–µ–µ –ø–æ–ª–æ–≤–∏–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤';
    // }

    let result = `${score} –∏–∑ ${questions.length}`;


    const finalMessage = resultsTemplate.replace('%result%', result + ' ‚Äî –≤–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç')

    headerContainer.innerHTML = finalMessage;

    submitButton.blur();
    submitButton.innerText = '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ'
    submitButton.onclick = function (){
        history.go();
    }
}

// function shuffle(questions) {
//     let j, temp;
//     for (let i = questions.length - 1; i > 0; i--) {
//         j = Math.floor(Math.random() * (i + 1));
//         temp = questions[j];
//         questions[j] = questions[i];
//         questions[i] = temp;
//     }
//     return questions;
// }
